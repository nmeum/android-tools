From aa1a21801edbbe2d275c4eb85501af106b0a80e1 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?S=C3=B6ren=20Tempel?= <soeren+git@soeren-tempel.net>
Date: Sun, 22 Dec 2019 18:42:19 +0100
Subject: [PATCH] Don't use the internal glibc header sys/cdefs.h

This patch was created using sed(1) and ag(1) with the following script:

	for file in $(ag -l '__BEGIN_DECLS|sys/cdefs.h'); do
		sed -i "${file}" \
			-e 's/__BEGIN_DECLS/#ifdef __cplusplus\nextern "C" {\n#endif/g' \
			-e 's/__END_DECLS/#ifdef __cplusplus\n}\n#endif/g' \
			-e '/#include <sys\/cdefs.h>/d'
	done

Then remove garbage in core/liblog/log_portability.h.

https://wiki.musl-libc.org/faq.html#Q:-When-compiling-something-against-musl,-I-get-error-messages-about-<code>sys/cdefs.h</code>
---
 base/include/android-base/endian.h            |  1 -
 base/include/android-base/properties.h        |  1 -
 debuggerd/include/debuggerd/client.h          |  1 -
 debuggerd/include/debuggerd/handler.h         |  9 +++++---
 debuggerd/util.h                              |  1 -
 deprecated-adf/libadf/include/adf/adf.h       |  9 +++++---
 .../libadfhwc/include/adfhwc/adfhwc.h         |  9 +++++---
 fs_mgr/fs_mgr_priv_boot_config.h              |  1 -
 init/keychords.cpp                            |  1 -
 init/reboot.cpp                               |  1 -
 libasyncio/include/asyncio/AsyncIO.h          |  1 -
 libbacktrace/backtrace_testlib.h              |  9 +++++---
 libcutils/android_get_control_env.h           |  9 +++++---
 libcutils/include/cutils/android_reboot.h     |  9 +++++---
 libcutils/include/cutils/bitops.h             |  9 +++++---
 libcutils/include/cutils/klog.h               |  9 +++++---
 libcutils/include/cutils/partition_utils.h    |  9 +++++---
 libcutils/include/cutils/properties.h         |  1 -
 libcutils/include/cutils/str_parms.h          |  9 +++++---
 libcutils/include/cutils/trace.h              |  9 +++++---
 libcutils/include/private/canned_fs_config.h  |  8 +++++--
 libcutils/include/private/fs_config.h         |  9 +++++---
 libion/include/ion/ion.h                      |  8 +++++--
 libkeyutils/include/keyutils.h                |  9 +++++---
 liblog/fake_log_device.h                      |  8 +++++--
 liblog/include/log/log_main.h                 |  9 +++++---
 liblog/log_portability.h                      | 14 -------------
 liblog/logd_reader.h                          |  8 +++++--
 liblog/logger.h                               |  8 +++++--
 libmemunreachable/Allocator.cpp               |  1 -
 libmemunreachable/Binder.cpp                  |  9 +++++---
 libmemunreachable/bionic.h                    |  9 +++++---
 .../include/memunreachable/memunreachable.h   |  9 +++++---
 libnetutils/include/netutils/ifc.h            |  9 +++++---
 .../packagelistparser/packagelistparser.h     |  8 +++++--
 libpixelflinger/codeflinger/disassem.c        |  1 -
 libpixelflinger/codeflinger/mips64_disassem.c |  1 -
 libpixelflinger/codeflinger/mips_disassem.c   |  1 -
 libprocessgroup/cgroup_map.h                  |  1 -
 .../cgrouprc/include/android/cgrouprc.h       |  8 +++++--
 .../include/processgroup/processgroup.h       |  9 +++++---
 libprocessgroup/task_profiles.h               |  1 -
 libsuspend/autosuspend_ops.h                  |  8 +++++--
 libsuspend/include/suspend/autosuspend.h      |  9 +++++---
 libsync/include/android/sync.h                |  8 +++++--
 libsync/include/ndk/sync.h                    |  9 +++++---
 libsync/sw_sync.h                             |  8 +++++--
 libsystem/include/system/camera.h             |  9 +++++---
 libsystem/include/system/radio.h              |  1 -
 libutils/Singleton_test.h                     |  9 +++++---
 .../include/ziparchive/zip_archive.h          |  1 -
 llkd/include/llkd.h                           | 21 +++++++++++++------
 llkd/libllkd.cpp                              |  1 -
 lmkd/include/liblmkd_utils.h                  |  9 +++++---
 lmkd/include/lmkd.h                           |  9 +++++---
 lmkd/liblmkd_utils.c                          |  1 -
 lmkd/libpsi/include/psi/psi.h                 |  9 +++++---
 lmkd/lmkd.c                                   |  1 -
 lmkd/statslog.h                               |  9 +++++---
 logcat/logcat.cpp                             |  1 -
 logcat/tests/logcat_test.cpp                  |  1 -
 logd/LogBuffer.cpp                            |  1 -
 logd/LogListener.cpp                          |  1 -
 logd/LogUtils.h                               |  1 -
 logd/libaudit.h                               |  9 +++++---
 trusty/gatekeeper/trusty_gatekeeper_ipc.h     |  8 +++++--
 .../ipc/trusty_keymaster_ipc.h                |  8 +++++--
 .../storage/lib/include/trusty/lib/storage.h  |  8 +++++--
 68 files changed, 261 insertions(+), 155 deletions(-)

diff --git a/base/include/android-base/endian.h b/base/include/android-base/endian.h
index 8fa6365ee..1e5cceb9a 100644
--- a/base/include/android-base/endian.h
+++ b/base/include/android-base/endian.h
@@ -19,7 +19,6 @@
 /* A cross-platform equivalent of bionic's <sys/endian.h>. */
 
 /* For __BIONIC__ and __GLIBC__ */
-#include <sys/cdefs.h>
 
 #if defined(__BIONIC__)
 
diff --git a/base/include/android-base/properties.h b/base/include/android-base/properties.h
index 31823df0a..be1a96b61 100644
--- a/base/include/android-base/properties.h
+++ b/base/include/android-base/properties.h
@@ -16,7 +16,6 @@
 
 #pragma once
 
-#include <sys/cdefs.h>
 
 #include <chrono>
 #include <limits>
diff --git a/debuggerd/include/debuggerd/client.h b/debuggerd/include/debuggerd/client.h
index b7284b08e..b85b6e542 100644
--- a/debuggerd/include/debuggerd/client.h
+++ b/debuggerd/include/debuggerd/client.h
@@ -17,7 +17,6 @@
 #pragma once
 
 #include <stdbool.h>
-#include <sys/cdefs.h>
 #include <unistd.h>
 
 #include <android-base/unique_fd.h>
diff --git a/debuggerd/include/debuggerd/handler.h b/debuggerd/include/debuggerd/handler.h
index 7196e0ad4..9ba20db19 100644
--- a/debuggerd/include/debuggerd/handler.h
+++ b/debuggerd/include/debuggerd/handler.h
@@ -18,10 +18,11 @@
 
 #include <signal.h>
 #include <stdint.h>
-#include <sys/cdefs.h>
 #include <sys/types.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 // These callbacks are called in a signal handler, and thus must be async signal safe.
 // If null, the callbacks will not be called.
@@ -53,4 +54,6 @@ static void __attribute__((__unused__)) debuggerd_register_handlers(struct sigac
   sigaction(DEBUGGER_SIGNAL, action, nullptr);
 }
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
diff --git a/debuggerd/util.h b/debuggerd/util.h
index e96442360..43d430314 100644
--- a/debuggerd/util.h
+++ b/debuggerd/util.h
@@ -18,7 +18,6 @@
 
 #include <string>
 
-#include <sys/cdefs.h>
 #include <sys/types.h>
 
 std::string get_process_name(pid_t pid);
diff --git a/deprecated-adf/libadf/include/adf/adf.h b/deprecated-adf/libadf/include/adf/adf.h
index e4c7b28cc..41b3da475 100644
--- a/deprecated-adf/libadf/include/adf/adf.h
+++ b/deprecated-adf/libadf/include/adf/adf.h
@@ -19,7 +19,6 @@
 
 #include <stdint.h>
 #include <stdbool.h>
-#include <sys/cdefs.h>
 #include <sys/types.h>
 #include <video/adf.h>
 
@@ -30,7 +29,9 @@ struct adf_device {
     int fd;
 };
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /**
  * Enumerates all ADF devices.
@@ -290,6 +291,8 @@ int adf_find_simple_post_configuration(struct adf_device *dev,
         const __u32 *formats, size_t n_formats,
         adf_id_t *interface, adf_id_t *overlay_engine);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif /* _LIBADF_ADF_H_ */
diff --git a/deprecated-adf/libadfhwc/include/adfhwc/adfhwc.h b/deprecated-adf/libadfhwc/include/adfhwc/adfhwc.h
index 4f7092507..97beb2f71 100644
--- a/deprecated-adf/libadfhwc/include/adfhwc/adfhwc.h
+++ b/deprecated-adf/libadfhwc/include/adfhwc/adfhwc.h
@@ -19,7 +19,6 @@
 
 #include <stdbool.h>
 #include <stdint.h>
-#include <sys/cdefs.h>
 #include <video/adf.h>
 
 #include <hardware/hwcomposer.h>
@@ -86,7 +85,9 @@ static inline uint32_t adf_hwc_interface_flag_for_disp(int disp)
     }
 }
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /**
  * Create a HWC helper for the specified ADF interfaces.
@@ -135,6 +136,8 @@ int adf_getDisplayAttributes_hwc2(struct adf_hwc_helper *dev, int disp,
 int adf_set_active_config_hwc2(struct adf_hwc_helper *dev, int disp,
         uint32_t config);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif /* _LIBADFHWC_ADFHWC_H_ */
diff --git a/fs_mgr/fs_mgr_priv_boot_config.h b/fs_mgr/fs_mgr_priv_boot_config.h
index 417fb380b..6528248a9 100644
--- a/fs_mgr/fs_mgr_priv_boot_config.h
+++ b/fs_mgr/fs_mgr_priv_boot_config.h
@@ -17,7 +17,6 @@
 #ifndef __CORE_FS_MGR_PRIV_BOOTCONFIG_H
 #define __CORE_FS_MGR_PRIV_BOOTCONFIG_H
 
-#include <sys/cdefs.h>
 #include <string>
 #include <utility>
 #include <vector>
diff --git a/init/keychords.cpp b/init/keychords.cpp
index 5f2682be5..fe00a8d7b 100644
--- a/init/keychords.cpp
+++ b/init/keychords.cpp
@@ -19,7 +19,6 @@
 #include <dirent.h>
 #include <fcntl.h>
 #include <linux/input.h>
-#include <sys/cdefs.h>
 #include <sys/inotify.h>
 #include <sys/ioctl.h>
 #include <sys/types.h>
diff --git a/init/reboot.cpp b/init/reboot.cpp
index d77b9757e..9d66f4a68 100644
--- a/init/reboot.cpp
+++ b/init/reboot.cpp
@@ -23,7 +23,6 @@
 #include <mntent.h>
 #include <semaphore.h>
 #include <stdlib.h>
-#include <sys/cdefs.h>
 #include <sys/ioctl.h>
 #include <sys/mount.h>
 #include <sys/stat.h>
diff --git a/libasyncio/include/asyncio/AsyncIO.h b/libasyncio/include/asyncio/AsyncIO.h
index 9620d2a84..005fc6648 100644
--- a/libasyncio/include/asyncio/AsyncIO.h
+++ b/libasyncio/include/asyncio/AsyncIO.h
@@ -20,7 +20,6 @@
 #include <linux/aio_abi.h>
 #include <stdbool.h>
 #include <stdint.h>
-#include <sys/cdefs.h>
 #include <sys/types.h>
 #include <time.h>
 #include <unistd.h>
diff --git a/libbacktrace/backtrace_testlib.h b/libbacktrace/backtrace_testlib.h
index 9b55e56d4..6289c66b9 100644
--- a/libbacktrace/backtrace_testlib.h
+++ b/libbacktrace/backtrace_testlib.h
@@ -17,9 +17,10 @@
 #ifndef _LIBBACKTRACE_BACKTRACE_TESTLIB_H
 #define _LIBBACKTRACE_BACKTRACE_TESTLIB_H
 
-#include <sys/cdefs.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 void test_loop_forever();
 void test_signal_handler(int);
@@ -31,6 +32,8 @@ int test_level_one(int, int, int, int, void (*)(void*), void*);
 int test_recursive_call(int, void (*)(void*), void*);
 void test_get_context_and_wait(void*, volatile int*);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif  // _LIBBACKTRACE_BACKTRACE_TESTLIB_H
diff --git a/libcutils/android_get_control_env.h b/libcutils/android_get_control_env.h
index a83026918..40edc2d37 100644
--- a/libcutils/android_get_control_env.h
+++ b/libcutils/android_get_control_env.h
@@ -16,11 +16,14 @@
 
 #pragma once
 
-#include <sys/cdefs.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 int __android_get_control_from_env(const char* prefix, const char* name)
         __attribute__((visibility("hidden")));
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
diff --git a/libcutils/include/cutils/android_reboot.h b/libcutils/include/cutils/android_reboot.h
index cd27eef88..2e86f6cb8 100644
--- a/libcutils/include/cutils/android_reboot.h
+++ b/libcutils/include/cutils/android_reboot.h
@@ -16,9 +16,10 @@
 
 #pragma once
 
-#include <sys/cdefs.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /* Commands */
 #define ANDROID_RB_RESTART 0xDEAD0001 /* deprecated. Use RESTART2. */
@@ -39,4 +40,6 @@ __BEGIN_DECLS
  */
 int android_reboot(unsigned cmd, int flags, const char* arg);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
diff --git a/libcutils/include/cutils/bitops.h b/libcutils/include/cutils/bitops.h
index 38d284039..79193b589 100644
--- a/libcutils/include/cutils/bitops.h
+++ b/libcutils/include/cutils/bitops.h
@@ -20,9 +20,10 @@
 #include <stdbool.h>
 #include <string.h>
 #include <strings.h>
-#include <sys/cdefs.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 static inline int popcount(unsigned int x) {
     return __builtin_popcount(x);
@@ -36,6 +37,8 @@ static inline int popcountll(unsigned long long x) {
     return __builtin_popcountll(x);
 }
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif /* __CUTILS_BITOPS_H */
diff --git a/libcutils/include/cutils/klog.h b/libcutils/include/cutils/klog.h
index 5ae6216eb..8006be730 100644
--- a/libcutils/include/cutils/klog.h
+++ b/libcutils/include/cutils/klog.h
@@ -17,11 +17,12 @@
 #ifndef _CUTILS_KLOG_H_
 #define _CUTILS_KLOG_H_
 
-#include <sys/cdefs.h>
 #include <sys/uio.h>
 #include <stdarg.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 void klog_set_level(int level);
 
@@ -29,7 +30,9 @@ void klog_write(int level, const char *fmt, ...)
     __attribute__ ((format(printf, 2, 3)));
 void klog_writev(int level, const struct iovec* iov, int iov_count);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #define KLOG_ERROR_LEVEL   3
 #define KLOG_WARNING_LEVEL 4
diff --git a/libcutils/include/cutils/partition_utils.h b/libcutils/include/cutils/partition_utils.h
index 8bc9b48b3..ff1d13a06 100644
--- a/libcutils/include/cutils/partition_utils.h
+++ b/libcutils/include/cutils/partition_utils.h
@@ -17,12 +17,15 @@
 #ifndef __CUTILS_PARTITION_WIPED_H__
 #define __CUTILS_PARTITION_WIPED_H__
 
-#include <sys/cdefs.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 int partition_wiped(const char* source);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif /* __CUTILS_PARTITION_WIPED_H__ */
diff --git a/libcutils/include/cutils/properties.h b/libcutils/include/cutils/properties.h
index d2e08712a..7e0eb2ac0 100644
--- a/libcutils/include/cutils/properties.h
+++ b/libcutils/include/cutils/properties.h
@@ -17,7 +17,6 @@
 #ifndef __CUTILS_PROPERTIES_H
 #define __CUTILS_PROPERTIES_H
 
-#include <sys/cdefs.h>
 #include <stddef.h>
 #include <sys/system_properties.h>
 #include <stdint.h>
diff --git a/libcutils/include/cutils/str_parms.h b/libcutils/include/cutils/str_parms.h
index aa1435a08..160792a37 100644
--- a/libcutils/include/cutils/str_parms.h
+++ b/libcutils/include/cutils/str_parms.h
@@ -18,9 +18,10 @@
 #define __CUTILS_STR_PARMS_H
 
 #include <stdint.h>
-#include <sys/cdefs.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 struct str_parms;
 
@@ -55,6 +56,8 @@ char *str_parms_to_str(struct str_parms *str_parms);
 /* debug */
 void str_parms_dump(struct str_parms *str_parms);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif /* __CUTILS_STR_PARMS_H */
diff --git a/libcutils/include/cutils/trace.h b/libcutils/include/cutils/trace.h
index 79b4b355b..712f75c4f 100644
--- a/libcutils/include/cutils/trace.h
+++ b/libcutils/include/cutils/trace.h
@@ -22,13 +22,14 @@
 #include <stdbool.h>
 #include <stdint.h>
 #include <stdio.h>
-#include <sys/cdefs.h>
 #include <sys/types.h>
 #include <unistd.h>
 
 #include <cutils/compiler.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /**
  * The ATRACE_TAG macro can be defined before including this header to trace
@@ -256,6 +257,8 @@ static inline void atrace_int64(uint64_t tag, const char* name, int64_t value)
     }
 }
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif // _LIBS_CUTILS_TRACE_H
diff --git a/libcutils/include/private/canned_fs_config.h b/libcutils/include/private/canned_fs_config.h
index 135b91c6c..c155a8945 100644
--- a/libcutils/include/private/canned_fs_config.h
+++ b/libcutils/include/private/canned_fs_config.h
@@ -19,12 +19,16 @@
 
 #include <inttypes.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 int load_canned_fs_config(const char* fn);
 void canned_fs_config(const char* path, int dir, const char* target_out_path, unsigned* uid,
                       unsigned* gid, unsigned* mode, uint64_t* capabilities);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif
diff --git a/libcutils/include/private/fs_config.h b/libcutils/include/private/fs_config.h
index 8a9a1ffd7..40cb55f23 100644
--- a/libcutils/include/private/fs_config.h
+++ b/libcutils/include/private/fs_config.h
@@ -22,7 +22,6 @@
 #pragma once
 
 #include <stdint.h>
-#include <sys/cdefs.h>
 
 #if defined(__BIONIC__)
 #include <linux/capability.h>
@@ -32,7 +31,9 @@
 
 /* Rules for directories and files has moved to system/code/libcutils/fs_config.c */
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /*
  * Used in:
@@ -47,4 +48,6 @@ __BEGIN_DECLS
 void fs_config(const char* path, int dir, const char* target_out_path, unsigned* uid, unsigned* gid,
                unsigned* mode, uint64_t* capabilities);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
diff --git a/libion/include/ion/ion.h b/libion/include/ion/ion.h
index 1480bd965..eb80cf1f5 100644
--- a/libion/include/ion/ion.h
+++ b/libion/include/ion/ion.h
@@ -24,7 +24,9 @@
 #include <sys/types.h>
 #include <linux/ion.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 struct ion_handle;
 
@@ -51,6 +53,8 @@ int ion_query_get_heaps(int fd, int cnt, void* buffers);
 int ion_is_legacy(int fd);
 int ion_is_using_modular_heaps(int fd);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif /* __SYS_CORE_ION_H */
diff --git a/libkeyutils/include/keyutils.h b/libkeyutils/include/keyutils.h
index c508f2790..2c3b4b0b1 100644
--- a/libkeyutils/include/keyutils.h
+++ b/libkeyutils/include/keyutils.h
@@ -31,9 +31,10 @@
 
 #include <linux/keyctl.h>
 #include <stdint.h>
-#include <sys/cdefs.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 typedef int32_t key_serial_t;
 
@@ -55,6 +56,8 @@ long keyctl_restrict_keyring(key_serial_t keyring, const char* type, const char*
 
 long keyctl_get_security(key_serial_t key, char* buffer, size_t buflen);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif
diff --git a/liblog/fake_log_device.h b/liblog/fake_log_device.h
index ce54db2bf..fc37085e6 100644
--- a/liblog/fake_log_device.h
+++ b/liblog/fake_log_device.h
@@ -23,7 +23,9 @@
 
 struct iovec;
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 int fakeLogOpen(const char* pathName);
 int fakeLogClose(int fd);
@@ -34,4 +36,6 @@ int __android_log_is_loggable(int prio, const char*, int def);
 int __android_log_is_loggable_len(int prio, const char*, size_t, int def);
 int __android_log_is_debuggable();
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
diff --git a/liblog/include/log/log_main.h b/liblog/include/log/log_main.h
index 64791c2cc..f9ebf23f8 100644
--- a/liblog/include/log/log_main.h
+++ b/liblog/include/log/log_main.h
@@ -17,12 +17,13 @@
 #pragma once
 
 #include <stdbool.h>
-#include <sys/cdefs.h>
 #include <sys/types.h>
 
 #include <android/log.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /*
  * Normally we strip the effects of ALOGV (VERBOSE messages),
@@ -372,4 +373,6 @@ int __android_log_is_loggable_len(int prio, const char* tag, size_t len, int def
 #pragma clang diagnostic pop
 #endif
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
diff --git a/liblog/log_portability.h b/liblog/log_portability.h
index b7279d1d8..ea413b92d 100644
--- a/liblog/log_portability.h
+++ b/liblog/log_portability.h
@@ -16,22 +16,8 @@
 
 #pragma once
 
-#include <sys/cdefs.h>
 #include <unistd.h>
 
-/* possible missing definitions in sys/cdefs.h */
-
-/* DECLS */
-#ifndef __BEGIN_DECLS
-#if defined(__cplusplus)
-#define __BEGIN_DECLS extern "C" {
-#define __END_DECLS }
-#else
-#define __BEGIN_DECLS
-#define __END_DECLS
-#endif
-#endif
-
 /* possible missing definitions in unistd.h */
 
 #ifndef TEMP_FAILURE_RETRY
diff --git a/liblog/logd_reader.h b/liblog/logd_reader.h
index 7c53cbb65..df881ec51 100644
--- a/liblog/logd_reader.h
+++ b/liblog/logd_reader.h
@@ -20,8 +20,12 @@
 
 #include "log_portability.h"
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 ssize_t __send_log_msg(char* buf, size_t buf_size);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
diff --git a/liblog/logger.h b/liblog/logger.h
index 8cae66c88..c5fbc1184 100644
--- a/liblog/logger.h
+++ b/liblog/logger.h
@@ -24,7 +24,9 @@
 #include "log_portability.h"
 #include "uio.h"
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /* Union, sock or fd of zero is not allowed unless static initialized */
 union android_log_context_union {
@@ -145,4 +147,6 @@ void __android_log_lock();
 int __android_log_trylock();
 void __android_log_unlock();
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
diff --git a/libmemunreachable/Allocator.cpp b/libmemunreachable/Allocator.cpp
index 1eb7e98c5..4863907d4 100644
--- a/libmemunreachable/Allocator.cpp
+++ b/libmemunreachable/Allocator.cpp
@@ -22,7 +22,6 @@
 #include <assert.h>
 #include <stdlib.h>
 
-#include <sys/cdefs.h>
 #include <sys/mman.h>
 #include <sys/prctl.h>
 
diff --git a/libmemunreachable/Binder.cpp b/libmemunreachable/Binder.cpp
index 60512a3f8..834507459 100644
--- a/libmemunreachable/Binder.cpp
+++ b/libmemunreachable/Binder.cpp
@@ -14,7 +14,6 @@
  * limitations under the License.
  */
 
-#include <sys/cdefs.h>
 #include <unistd.h>
 
 #include <functional>
@@ -22,7 +21,9 @@
 #include "Binder.h"
 #include "log.h"
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 // Weak undefined references to the symbols in libbinder and libhwbinder
 // so that libmemunreachable can call them in processes that have them
@@ -30,7 +31,9 @@ __BEGIN_DECLS
 ssize_t __attribute__((weak)) getBinderKernelReferences(size_t, uintptr_t*);
 ssize_t __attribute__((weak)) getHWBinderKernelReferences(size_t, uintptr_t*);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 namespace android {
 
diff --git a/libmemunreachable/bionic.h b/libmemunreachable/bionic.h
index dd1ec79d6..cc7374d07 100644
--- a/libmemunreachable/bionic.h
+++ b/libmemunreachable/bionic.h
@@ -19,9 +19,10 @@
 
 #include <stdint.h>
 #include <stdlib.h>
-#include <sys/cdefs.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /* Exported from bionic */
 extern void malloc_disable();
@@ -30,6 +31,8 @@ extern int malloc_iterate(uintptr_t base, size_t size,
                           void (*callback)(uintptr_t base, size_t size, void* arg), void* arg);
 extern ssize_t malloc_backtrace(void* pointer, uintptr_t* frames, size_t frame_count);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif  // LIBMEMUNREACHABLE_BIONIC_H_
diff --git a/libmemunreachable/include/memunreachable/memunreachable.h b/libmemunreachable/include/memunreachable/memunreachable.h
index 011443fe3..86e9f5ff3 100644
--- a/libmemunreachable/include/memunreachable/memunreachable.h
+++ b/libmemunreachable/include/memunreachable/memunreachable.h
@@ -18,7 +18,6 @@
 #define LIBMEMUNREACHABLE_MEMUNREACHABLE_H_
 
 #include <string.h>
-#include <sys/cdefs.h>
 
 #ifdef __cplusplus
 
@@ -82,12 +81,16 @@ std::string GetUnreachableMemoryString(bool log_contents = false, size_t limit =
 
 #endif
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 bool LogUnreachableMemory(bool log_contents, size_t limit);
 
 bool NoLeaks();
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif  // LIBMEMUNREACHABLE_MEMUNREACHABLE_H_
diff --git a/libnetutils/include/netutils/ifc.h b/libnetutils/include/netutils/ifc.h
index 3b272343d..60c68d76c 100644
--- a/libnetutils/include/netutils/ifc.h
+++ b/libnetutils/include/netutils/ifc.h
@@ -17,10 +17,11 @@
 #ifndef _NETUTILS_IFC_H_
 #define _NETUTILS_IFC_H_
 
-#include <sys/cdefs.h>
 #include <arpa/inet.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 extern int ifc_init(void);
 extern void ifc_close(void);
@@ -61,6 +62,8 @@ extern int ifc_configure(const char *ifname, in_addr_t address,
 
 extern in_addr_t prefixLengthToIpv4Netmask(int prefix_length);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif /* _NETUTILS_IFC_H_ */
diff --git a/libpackagelistparser/include/packagelistparser/packagelistparser.h b/libpackagelistparser/include/packagelistparser/packagelistparser.h
index e89cb5400..86b6604ca 100644
--- a/libpackagelistparser/include/packagelistparser/packagelistparser.h
+++ b/libpackagelistparser/include/packagelistparser/packagelistparser.h
@@ -19,7 +19,9 @@
 #include <stdbool.h>
 #include <sys/types.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 typedef struct gid_list {
   /** Number of gids. */
@@ -78,4 +80,6 @@ bool packagelist_parse_file(const char* path, bool (*callback)(pkg_info* info, v
 /** Frees the given `pkg_info`. */
 void packagelist_free(pkg_info* info);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
diff --git a/libpixelflinger/codeflinger/disassem.c b/libpixelflinger/codeflinger/disassem.c
index 5cbd63db8..294b13800 100644
--- a/libpixelflinger/codeflinger/disassem.c
+++ b/libpixelflinger/codeflinger/disassem.c
@@ -47,7 +47,6 @@
  * This code is not complete. Not all instructions are disassembled.
  */
 
-#include <sys/cdefs.h>
 //__FBSDID("$FreeBSD: /repoman/r/ncvs/src/sys/arm/arm/disassem.c,v 1.2 2005/01/05 21:58:47 imp Exp $");
 #include <sys/param.h>
 #include <stdio.h>
diff --git a/libpixelflinger/codeflinger/mips64_disassem.c b/libpixelflinger/codeflinger/mips64_disassem.c
index 852829984..2f1272d6b 100644
--- a/libpixelflinger/codeflinger/mips64_disassem.c
+++ b/libpixelflinger/codeflinger/mips64_disassem.c
@@ -38,7 +38,6 @@
 #include <stdbool.h>
 #include <stdint.h>
 #include <stdio.h>
-#include <sys/cdefs.h>
 #include <sys/types.h>
 
 #include <android/log.h>
diff --git a/libpixelflinger/codeflinger/mips_disassem.c b/libpixelflinger/codeflinger/mips_disassem.c
index 1fe680675..200c4abaa 100644
--- a/libpixelflinger/codeflinger/mips_disassem.c
+++ b/libpixelflinger/codeflinger/mips_disassem.c
@@ -38,7 +38,6 @@
 #include <stdint.h>
 #include <stdarg.h>
 #include <stdbool.h>
-#include <sys/cdefs.h>
 
 #include <sys/types.h>
 #include "mips_opcode.h"
diff --git a/libprocessgroup/cgroup_map.h b/libprocessgroup/cgroup_map.h
index 427d71b40..62984037d 100644
--- a/libprocessgroup/cgroup_map.h
+++ b/libprocessgroup/cgroup_map.h
@@ -16,7 +16,6 @@
 
 #pragma once
 
-#include <sys/cdefs.h>
 #include <sys/types.h>
 
 #include <map>
diff --git a/libprocessgroup/cgrouprc/include/android/cgrouprc.h b/libprocessgroup/cgrouprc/include/android/cgrouprc.h
index 0f6a9cd5d..3a41a550d 100644
--- a/libprocessgroup/cgrouprc/include/android/cgrouprc.h
+++ b/libprocessgroup/cgrouprc/include/android/cgrouprc.h
@@ -18,7 +18,9 @@
 
 #include <stdint.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 // For host builds, __INTRODUCED_IN is not defined.
 #ifndef __INTRODUCED_IN
@@ -84,6 +86,8 @@ __attribute__((warn_unused_result)) const char* ACgroupController_getName(const
 __attribute__((warn_unused_result)) const char* ACgroupController_getPath(const ACgroupController*)
         __INTRODUCED_IN(29);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif
diff --git a/libprocessgroup/include/processgroup/processgroup.h b/libprocessgroup/include/processgroup/processgroup.h
index f73ec2d41..8f1455acf 100644
--- a/libprocessgroup/include/processgroup/processgroup.h
+++ b/libprocessgroup/include/processgroup/processgroup.h
@@ -16,12 +16,13 @@
 
 #pragma once
 
-#include <sys/cdefs.h>
 #include <sys/types.h>
 #include <string>
 #include <vector>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 static constexpr const char* CGROUPV2_CONTROLLER_NAME = "cgroup2";
 
@@ -65,4 +66,6 @@ void removeAllProcessGroups(void);
 
 #endif // __ANDROID_VNDK__
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
diff --git a/libprocessgroup/task_profiles.h b/libprocessgroup/task_profiles.h
index 9f2308c64..25c4220b3 100644
--- a/libprocessgroup/task_profiles.h
+++ b/libprocessgroup/task_profiles.h
@@ -16,7 +16,6 @@
 
 #pragma once
 
-#include <sys/cdefs.h>
 #include <sys/types.h>
 #include <map>
 #include <mutex>
diff --git a/libsuspend/autosuspend_ops.h b/libsuspend/autosuspend_ops.h
index b0024c8bb..ea0eafd00 100644
--- a/libsuspend/autosuspend_ops.h
+++ b/libsuspend/autosuspend_ops.h
@@ -24,8 +24,12 @@ struct autosuspend_ops {
     void (*set_wakeup_callback)(void (*func)(bool success));
 };
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 struct autosuspend_ops *autosuspend_wakeup_count_init(void);
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif
diff --git a/libsuspend/include/suspend/autosuspend.h b/libsuspend/include/suspend/autosuspend.h
index 21f4d61bf..dbbca161c 100644
--- a/libsuspend/include/suspend/autosuspend.h
+++ b/libsuspend/include/suspend/autosuspend.h
@@ -17,10 +17,11 @@
 #ifndef _LIBSUSPEND_AUTOSUSPEND_H_
 #define _LIBSUSPEND_AUTOSUSPEND_H_
 
-#include <sys/cdefs.h>
 #include <stdbool.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /*
  * autosuspend_enable
@@ -64,6 +65,8 @@ int autosuspend_force_suspend(int timeout_ms);
  */
 void autosuspend_set_wakeup_callback(void (*func)(bool success));
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif
diff --git a/libsync/include/android/sync.h b/libsync/include/android/sync.h
index 32bb878ba..59a8f9fad 100644
--- a/libsync/include/android/sync.h
+++ b/libsync/include/android/sync.h
@@ -39,11 +39,15 @@
 
 #include "../ndk/sync.h"
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /* timeout in msecs */
 int sync_wait(int fd, int timeout);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif /* __SYS_CORE_SYNC_H */
diff --git a/libsync/include/ndk/sync.h b/libsync/include/ndk/sync.h
index 2a59e35bb..64d23a43c 100644
--- a/libsync/include/ndk/sync.h
+++ b/libsync/include/ndk/sync.h
@@ -27,11 +27,12 @@
 #define ANDROID_SYNC_H
 
 #include <stdint.h>
-#include <sys/cdefs.h>
 
 #include <linux/sync_file.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 #if __ANDROID_API__ >= 26
 
@@ -103,7 +104,9 @@ void sync_file_info_free(struct sync_file_info* info) __INTRODUCED_IN(26);
 
 #endif /* __ANDROID_API__ >= 26 */
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif /* ANDROID_SYNC_H */
 
diff --git a/libsync/sw_sync.h b/libsync/sw_sync.h
index fda1c4c57..395c38072 100644
--- a/libsync/sw_sync.h
+++ b/libsync/sw_sync.h
@@ -19,7 +19,9 @@
 #ifndef __SYS_CORE_SW_SYNC_H
 #define __SYS_CORE_SW_SYNC_H
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /*
  * sw_sync is mainly intended for testing and should not be compiled into
@@ -30,6 +32,8 @@ int sw_sync_timeline_create(void);
 int sw_sync_timeline_inc(int fd, unsigned count);
 int sw_sync_fence_create(int fd, const char *name, unsigned value);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif /* __SYS_CORE_SW_SYNC_H */
diff --git a/libsystem/include/system/camera.h b/libsystem/include/system/camera.h
index 2ca90c395..c42f55966 100644
--- a/libsystem/include/system/camera.h
+++ b/libsystem/include/system/camera.h
@@ -18,13 +18,14 @@
 #define SYSTEM_CORE_INCLUDE_ANDROID_CAMERA_H
 
 #include <stdint.h>
-#include <sys/cdefs.h>
 #include <sys/types.h>
 #include <cutils/native_handle.h>
 #include <hardware/hardware.h>
 #include <hardware/gralloc.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /**
  * A set of bit masks for specifying how the received preview frames are
@@ -302,6 +303,8 @@ typedef struct camera_frame_metadata {
     camera_face_t *faces;
 } camera_frame_metadata_t;
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif /* SYSTEM_CORE_INCLUDE_ANDROID_CAMERA_H */
diff --git a/libsystem/include/system/radio.h b/libsystem/include/system/radio.h
index acf3ea787..dfd254fc6 100644
--- a/libsystem/include/system/radio.h
+++ b/libsystem/include/system/radio.h
@@ -20,7 +20,6 @@
 #include <stdbool.h>
 #include <stdint.h>
 #include <stdio.h>
-#include <sys/cdefs.h>
 #include <sys/types.h>
 
 
diff --git a/libutils/Singleton_test.h b/libutils/Singleton_test.h
index c77d9ffe6..00bd56242 100644
--- a/libutils/Singleton_test.h
+++ b/libutils/Singleton_test.h
@@ -17,7 +17,6 @@
 #ifndef ANDROID_UTILS_SINGLETON_TEST_H
 #define ANDROID_UTILS_SINGLETON_TEST_H
 
-#include <sys/cdefs.h>
 
 #include "Singleton_test.h"
 
@@ -27,13 +26,17 @@ struct SingletonTestData : Singleton<SingletonTestData> {
     unsigned int contents;
 };
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 unsigned int singletonGetInstanceContents();
 void singletonSetInstanceContents(unsigned int);
 bool singletonHasInstance();
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 }
 
diff --git a/libziparchive/include/ziparchive/zip_archive.h b/libziparchive/include/ziparchive/zip_archive.h
index e3ac114f2..30518f0fe 100644
--- a/libziparchive/include/ziparchive/zip_archive.h
+++ b/libziparchive/include/ziparchive/zip_archive.h
@@ -22,7 +22,6 @@
 
 #include <stdint.h>
 #include <string.h>
-#include <sys/cdefs.h>
 #include <sys/types.h>
 
 #include <string>
diff --git a/llkd/include/llkd.h b/llkd/include/llkd.h
index 3586ca1b1..b606c60d8 100644
--- a/llkd/include/llkd.h
+++ b/llkd/include/llkd.h
@@ -22,9 +22,10 @@
 #endif
 
 #include <stdbool.h>
-#include <sys/cdefs.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 bool llkInit(const char* threadname); /* threadname NULL, not spawned */
 unsigned llkCheckMilliseconds(void);
@@ -63,17 +64,25 @@ unsigned llkCheckMilliseconds(void);
 #define LLK_BLACKLIST_STACK_DEFAULT    "init,lmkd.llkd,llkd,keystore,ueventd,apexd"
 /* clang-format on */
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #ifdef __cplusplus
-extern "C++" { /* In case this included wrapped with __BEGIN_DECLS */
+extern "C++" { /* In case this included wrapped with #ifdef __cplusplus
+extern "C" {
+#endif */
 
 #include <chrono>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 /* C++ code allowed to not specify threadname argument for this C linkage */
 bool llkInit(const char* threadname = nullptr);
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 std::chrono::milliseconds llkCheck(bool checkRunning = false);
 
 /* clang-format off */
diff --git a/llkd/libllkd.cpp b/llkd/libllkd.cpp
index b26ad4df6..95cc6d04d 100644
--- a/llkd/libllkd.cpp
+++ b/llkd/libllkd.cpp
@@ -25,7 +25,6 @@
 #include <signal.h>
 #include <stdint.h>
 #include <string.h>
-#include <sys/cdefs.h>  // ___STRING, __predict_true() and _predict_false()
 #include <sys/mman.h>   // mlockall()
 #include <sys/prctl.h>
 #include <sys/stat.h>     // lstat()
diff --git a/lmkd/include/liblmkd_utils.h b/lmkd/include/liblmkd_utils.h
index 72e3f4a2b..64d060c6a 100644
--- a/lmkd/include/liblmkd_utils.h
+++ b/lmkd/include/liblmkd_utils.h
@@ -17,12 +17,13 @@
 #ifndef _LIBLMKD_UTILS_H_
 #define _LIBLMKD_UTILS_H_
 
-#include <sys/cdefs.h>
 #include <sys/types.h>
 
 #include <lmkd.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /*
  * Connects to lmkd process and returns socket handle.
@@ -49,6 +50,8 @@ int lmkd_register_proc(int sock, struct lmk_procprio *params);
  */
 int create_memcg(uid_t uid, pid_t pid);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif /* _LIBLMKD_UTILS_H_ */
diff --git a/lmkd/include/lmkd.h b/lmkd/include/lmkd.h
index 59377dd1f..bdc5413f2 100644
--- a/lmkd/include/lmkd.h
+++ b/lmkd/include/lmkd.h
@@ -18,10 +18,11 @@
 #define _LMKD_H_
 
 #include <arpa/inet.h>
-#include <sys/cdefs.h>
 #include <sys/types.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /*
  * Supported LMKD commands
@@ -188,6 +189,8 @@ static inline size_t lmkd_pack_set_getkillcnt_repl(LMKD_CTRL_PACKET packet, int
     return 2 * sizeof(int);
 }
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif /* _LMKD_H_ */
diff --git a/lmkd/liblmkd_utils.c b/lmkd/liblmkd_utils.c
index fa3b7a920..3f76a35dd 100644
--- a/lmkd/liblmkd_utils.c
+++ b/lmkd/liblmkd_utils.c
@@ -16,7 +16,6 @@
 
 #include <errno.h>
 #include <fcntl.h>
-#include <sys/cdefs.h>
 #include <sys/stat.h>
 #include <sys/types.h>
 #include <stdio.h>
diff --git a/lmkd/libpsi/include/psi/psi.h b/lmkd/libpsi/include/psi/psi.h
index cd49e8b60..b4f4afe70 100644
--- a/lmkd/libpsi/include/psi/psi.h
+++ b/lmkd/libpsi/include/psi/psi.h
@@ -17,10 +17,11 @@
 #ifndef __ANDROID_PSI_H__
 #define __ANDROID_PSI_H__
 
-#include <sys/cdefs.h>
 #include <sys/types.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 enum psi_stall_type {
     PSI_SOME,
@@ -63,6 +64,8 @@ int unregister_psi_monitor(int epollfd, int fd);
  */
 void destroy_psi_monitor(int fd);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif  // __ANDROID_PSI_H__
diff --git a/lmkd/lmkd.c b/lmkd/lmkd.c
index 9de7ff7b7..8d96149f6 100644
--- a/lmkd/lmkd.c
+++ b/lmkd/lmkd.c
@@ -25,7 +25,6 @@
 #include <stdbool.h>
 #include <stdlib.h>
 #include <string.h>
-#include <sys/cdefs.h>
 #include <sys/epoll.h>
 #include <sys/eventfd.h>
 #include <sys/mman.h>
diff --git a/lmkd/statslog.h b/lmkd/statslog.h
index a09c7dd91..1c10f609b 100644
--- a/lmkd/statslog.h
+++ b/lmkd/statslog.h
@@ -21,11 +21,12 @@
 #include <inttypes.h>
 #include <stats_event_list.h>
 #include <stdbool.h>
-#include <sys/cdefs.h>
 
 #include <cutils/properties.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 struct memory_stat {
     int64_t pgfault;
@@ -131,6 +132,8 @@ static inline bool init_poll_kernel(struct kernel_poll_info *poll_info __unused)
 
 #endif /* LMKD_LOG_STATS */
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif /* _STATSLOG_H_ */
diff --git a/logcat/logcat.cpp b/logcat/logcat.cpp
index 4dcb3383e..5b261dc79 100644
--- a/logcat/logcat.cpp
+++ b/logcat/logcat.cpp
@@ -31,7 +31,6 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
-#include <sys/cdefs.h>
 #include <sys/ioctl.h>
 #include <sys/resource.h>
 #include <sys/socket.h>
diff --git a/logcat/tests/logcat_test.cpp b/logcat/tests/logcat_test.cpp
index b32b43737..a9f0a7738 100644
--- a/logcat/tests/logcat_test.cpp
+++ b/logcat/tests/logcat_test.cpp
@@ -21,7 +21,6 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
-#include <sys/cdefs.h>
 #include <sys/stat.h>
 #include <sys/types.h>
 #include <sys/wait.h>
diff --git a/logd/LogBuffer.cpp b/logd/LogBuffer.cpp
index ba05a064f..f244dec30 100644
--- a/logd/LogBuffer.cpp
+++ b/logd/LogBuffer.cpp
@@ -21,7 +21,6 @@
 #include <errno.h>
 #include <stdio.h>
 #include <string.h>
-#include <sys/cdefs.h>
 #include <sys/user.h>
 #include <time.h>
 #include <unistd.h>
diff --git a/logd/LogListener.cpp b/logd/LogListener.cpp
index 443570fd3..493756c60 100644
--- a/logd/LogListener.cpp
+++ b/logd/LogListener.cpp
@@ -15,7 +15,6 @@
  */
 
 #include <limits.h>
-#include <sys/cdefs.h>
 #include <sys/prctl.h>
 #include <sys/socket.h>
 #include <sys/types.h>
diff --git a/logd/LogUtils.h b/logd/LogUtils.h
index fa9f39895..67d448e4e 100644
--- a/logd/LogUtils.h
+++ b/logd/LogUtils.h
@@ -17,7 +17,6 @@
 #ifndef _LOGD_LOG_UTILS_H__
 #define _LOGD_LOG_UTILS_H__
 
-#include <sys/cdefs.h>
 #include <sys/types.h>
 
 #include <private/android_logger.h>
diff --git a/logd/libaudit.h b/logd/libaudit.h
index b4a92a8a3..6cf37914e 100644
--- a/logd/libaudit.h
+++ b/logd/libaudit.h
@@ -21,14 +21,15 @@
 #define _LIBAUDIT_H_
 
 #include <stdint.h>
-#include <sys/cdefs.h>
 #include <sys/socket.h>
 #include <sys/types.h>
 
 #include <linux/audit.h>
 #include <linux/netlink.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 #define MAX_AUDIT_MESSAGE_LENGTH 8970
 
@@ -101,6 +102,8 @@ extern int audit_setup(int fd, pid_t pid);
  */
 extern int audit_rate_limit(int fd, uint32_t limit);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif
diff --git a/trusty/gatekeeper/trusty_gatekeeper_ipc.h b/trusty/gatekeeper/trusty_gatekeeper_ipc.h
index f8de7f873..fa8fd4019 100644
--- a/trusty/gatekeeper/trusty_gatekeeper_ipc.h
+++ b/trusty/gatekeeper/trusty_gatekeeper_ipc.h
@@ -14,11 +14,15 @@
  * limitations under the License.
  */
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 int trusty_gatekeeper_connect();
 int trusty_gatekeeper_call(uint32_t cmd, void *in, uint32_t in_size, uint8_t *out,
                            uint32_t *out_size);
 void trusty_gatekeeper_disconnect();
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
diff --git a/trusty/keymaster/include/trusty_keymaster/ipc/trusty_keymaster_ipc.h b/trusty/keymaster/include/trusty_keymaster/ipc/trusty_keymaster_ipc.h
index 16207e6d9..9a1245886 100644
--- a/trusty/keymaster/include/trusty_keymaster/ipc/trusty_keymaster_ipc.h
+++ b/trusty/keymaster/include/trusty_keymaster/ipc/trusty_keymaster_ipc.h
@@ -20,7 +20,9 @@
 #include <keymaster/android_keymaster_messages.h>
 #include <trusty_keymaster/ipc/keymaster_ipc.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 const uint32_t TRUSTY_KEYMASTER_RECV_BUF_SIZE = 2 * PAGE_SIZE;
 const uint32_t TRUSTY_KEYMASTER_SEND_BUF_SIZE =
@@ -35,6 +37,8 @@ keymaster_error_t translate_error(int err);
 keymaster_error_t trusty_keymaster_send(uint32_t command, const keymaster::Serializable& req,
                                         keymaster::KeymasterResponse* rsp);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif  // TRUSTY_KEYMASTER_TRUSTY_KEYMASTER_IPC_H_
diff --git a/trusty/storage/lib/include/trusty/lib/storage.h b/trusty/storage/lib/include/trusty/lib/storage.h
index b8ddf67d8..6cac8750c 100644
--- a/trusty/storage/lib/include/trusty/lib/storage.h
+++ b/trusty/storage/lib/include/trusty/lib/storage.h
@@ -21,7 +21,9 @@
 
 #define STORAGE_MAX_NAME_LENGTH_BYTES 159
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 typedef uint32_t storage_session_t;
 typedef uint64_t file_handle_t;
@@ -151,4 +153,6 @@ int storage_get_file_size(file_handle_t handle, storage_off_t *size);
 int storage_end_transaction(storage_session_t session, bool complete);
 
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
-- 
2.25.1

