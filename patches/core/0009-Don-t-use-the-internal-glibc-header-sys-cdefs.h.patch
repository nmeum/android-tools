From 49a3dad208220b35ca7d81b7ea7f053801ada9dd Mon Sep 17 00:00:00 2001
From: John Zimmermann <me@johnnynator.dev>
Date: Thu, 18 Mar 2021 12:22:51 +0100
Subject: [PATCH] Don't use the internal glibc header sys/cdefs.h

        for file in $(ag -l '__BEGIN_DECLS|sys/cdefs.h'); do
                sed -i "${file}" \
                        -e 's/__BEGIN_DECLS/#ifdef __cplusplus\nextern "C" {\n#endif/g' \
                        -e 's/__END_DECLS/#ifdef __cplusplus\n}\n#endif/g' \
                        -e '/#include <sys\/cdefs.h>/d'
        done

https://wiki.musl-libc.org/faq.html#Q:-When-compiling-something-against-musl,-I-get-error-messages-about-%3Ccode%3Esys/cdefs.h%3C/code%3E
---
 debuggerd/include/debuggerd/client.h          |  1 -
 debuggerd/include/debuggerd/handler.h         |  9 +++++---
 debuggerd/util.h                              |  1 -
 fs_mgr/fs_mgr_priv_boot_config.h              |  1 -
 init/keychords.cpp                            |  1 -
 init/reboot.cpp                               |  1 -
 libasyncio/include/asyncio/AsyncIO.h          |  1 -
 libcutils/android_get_control_env.h           |  9 +++++---
 libcutils/include/cutils/android_reboot.h     |  9 +++++---
 libcutils/include/cutils/bitops.h             |  9 +++++---
 libcutils/include/cutils/klog.h               |  9 +++++---
 libcutils/include/cutils/partition_utils.h    |  9 +++++---
 libcutils/include/cutils/properties.h         |  1 -
 libcutils/include/cutils/str_parms.h          |  9 +++++---
 libcutils/include/cutils/trace.h              |  9 +++++---
 libcutils/include/private/canned_fs_config.h  |  9 +++++---
 libcutils/include/private/fs_config.h         |  9 +++++---
 libkeyutils/include/keyutils.h                |  9 +++++---
 libnetutils/include/netutils/ifc.h            |  9 +++++---
 .../packagelistparser/packagelistparser.h     |  8 +++++--
 libprocessgroup/cgroup_map.h                  |  1 -
 .../cgrouprc/include/android/cgrouprc.h       |  8 +++++--
 .../include/processgroup/processgroup.h       |  9 +++++---
 libprocessgroup/task_profiles.h               |  1 -
 libsuspend/autosuspend_ops.h                  |  8 +++++--
 libsuspend/include/suspend/autosuspend.h      |  9 +++++---
 libsync/include/android/sync.h                |  8 +++++--
 libsync/include/ndk/sync.h                    |  9 +++++---
 libsync/sw_sync.h                             |  8 +++++--
 libsystem/include/system/camera.h             |  9 +++++---
 libsystem/include/system/radio.h              |  1 -
 libutils/Singleton_test.h                     |  9 +++++---
 llkd/include/llkd.h                           | 21 +++++++++++++------
 llkd/libllkd.cpp                              |  1 -
 trusty/gatekeeper/trusty_gatekeeper_ipc.h     |  8 +++++--
 .../ipc/trusty_keymaster_ipc.h                |  8 +++++--
 .../storage/lib/include/trusty/lib/storage.h  |  8 +++++--
 37 files changed, 165 insertions(+), 84 deletions(-)

diff --git a/debuggerd/include/debuggerd/client.h b/debuggerd/include/debuggerd/client.h
index b7284b08ec..b85b6e542e 100644
--- a/debuggerd/include/debuggerd/client.h
+++ b/debuggerd/include/debuggerd/client.h
@@ -17,7 +17,6 @@
 #pragma once
 
 #include <stdbool.h>
-#include <sys/cdefs.h>
 #include <unistd.h>
 
 #include <android-base/unique_fd.h>
diff --git a/debuggerd/include/debuggerd/handler.h b/debuggerd/include/debuggerd/handler.h
index ebb5372..07e3c1e 100644
--- a/debuggerd/include/debuggerd/handler.h
+++ b/debuggerd/include/debuggerd/handler.h
@@ -20,11 +20,12 @@
 #include <signal.h>
 #include <stdint.h>
 #include <string.h>
-#include <sys/cdefs.h>
 #include <sys/system_properties.h>
 #include <sys/types.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 // Forward declare these classes so not everyone has to include GWP-ASan
 // headers.
@@ -94,4 +95,6 @@ static void __attribute__((__unused__)) debuggerd_register_handlers(struct sigac
   sigaction(BIONIC_SIGNAL_DEBUGGER, action, nullptr);
 }
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
diff --git a/debuggerd/util.h b/debuggerd/util.h
index 4375870..58c0816 100644
--- a/debuggerd/util.h
+++ b/debuggerd/util.h
@@ -20,7 +20,6 @@
 #include <string>
 #include <vector>
 
-#include <sys/cdefs.h>
 #include <sys/types.h>
 
 std::vector<std::string> get_command_line(pid_t pid);
diff --git a/init/keychords.cpp b/init/keychords.cpp
index adec383..40e8524 100644
--- a/init/keychords.cpp
+++ b/init/keychords.cpp
@@ -19,7 +19,6 @@
 #include <dirent.h>
 #include <fcntl.h>
 #include <linux/input.h>
-#include <sys/cdefs.h>
 #include <sys/inotify.h>
 #include <sys/ioctl.h>
 #include <sys/types.h>
diff --git a/init/reboot.cpp b/init/reboot.cpp
index 3351c4c..3bf4518 100644
--- a/init/reboot.cpp
+++ b/init/reboot.cpp
@@ -24,7 +24,6 @@
 #include <mntent.h>
 #include <semaphore.h>
 #include <stdlib.h>
-#include <sys/cdefs.h>
 #include <sys/ioctl.h>
 #include <sys/mount.h>
 #include <sys/stat.h>
diff --git a/libasyncio/include/asyncio/AsyncIO.h b/libasyncio/include/asyncio/AsyncIO.h
index 9620d2a..005fc66 100644
--- a/libasyncio/include/asyncio/AsyncIO.h
+++ b/libasyncio/include/asyncio/AsyncIO.h
@@ -20,7 +20,6 @@
 #include <linux/aio_abi.h>
 #include <stdbool.h>
 #include <stdint.h>
-#include <sys/cdefs.h>
 #include <sys/types.h>
 #include <time.h>
 #include <unistd.h>
diff --git a/libcutils/android_get_control_env.h b/libcutils/android_get_control_env.h
index a830269..40edc2d 100644
--- a/libcutils/android_get_control_env.h
+++ b/libcutils/android_get_control_env.h
@@ -16,11 +16,14 @@
 
 #pragma once
 
-#include <sys/cdefs.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 int __android_get_control_from_env(const char* prefix, const char* name)
         __attribute__((visibility("hidden")));
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
diff --git a/libcutils/include/cutils/android_reboot.h b/libcutils/include/cutils/android_reboot.h
index 24e32d5..56a31bc 100644
--- a/libcutils/include/cutils/android_reboot.h
+++ b/libcutils/include/cutils/android_reboot.h
@@ -16,9 +16,10 @@
 
 #pragma once
 
-#include <sys/cdefs.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /* Commands */
 #define ANDROID_RB_RESTART 0xDEAD0001 /* deprecated. Use RESTART2. */
@@ -40,4 +41,6 @@ __BEGIN_DECLS
  */
 int android_reboot(unsigned cmd, int flags, const char* arg);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
diff --git a/libcutils/include/cutils/bitops.h b/libcutils/include/cutils/bitops.h
index 38d2840..79193b5 100644
--- a/libcutils/include/cutils/bitops.h
+++ b/libcutils/include/cutils/bitops.h
@@ -20,9 +20,10 @@
 #include <stdbool.h>
 #include <string.h>
 #include <strings.h>
-#include <sys/cdefs.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 static inline int popcount(unsigned int x) {
     return __builtin_popcount(x);
@@ -36,6 +37,8 @@ static inline int popcountll(unsigned long long x) {
     return __builtin_popcountll(x);
 }
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif /* __CUTILS_BITOPS_H */
diff --git a/libcutils/include/cutils/klog.h b/libcutils/include/cutils/klog.h
index 5ae6216..8006be7 100644
--- a/libcutils/include/cutils/klog.h
+++ b/libcutils/include/cutils/klog.h
@@ -17,11 +17,12 @@
 #ifndef _CUTILS_KLOG_H_
 #define _CUTILS_KLOG_H_
 
-#include <sys/cdefs.h>
 #include <sys/uio.h>
 #include <stdarg.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 void klog_set_level(int level);
 
@@ -29,7 +30,9 @@ void klog_write(int level, const char *fmt, ...)
     __attribute__ ((format(printf, 2, 3)));
 void klog_writev(int level, const struct iovec* iov, int iov_count);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #define KLOG_ERROR_LEVEL   3
 #define KLOG_WARNING_LEVEL 4
diff --git a/libcutils/include/cutils/partition_utils.h b/libcutils/include/cutils/partition_utils.h
index 8bc9b48..ff1d13a 100644
--- a/libcutils/include/cutils/partition_utils.h
+++ b/libcutils/include/cutils/partition_utils.h
@@ -17,12 +17,15 @@
 #ifndef __CUTILS_PARTITION_WIPED_H__
 #define __CUTILS_PARTITION_WIPED_H__
 
-#include <sys/cdefs.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 int partition_wiped(const char* source);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif /* __CUTILS_PARTITION_WIPED_H__ */
diff --git a/libcutils/include/cutils/properties.h b/libcutils/include/cutils/properties.h
index 78d8bc6..9f87212 100644
--- a/libcutils/include/cutils/properties.h
+++ b/libcutils/include/cutils/properties.h
@@ -16,7 +16,6 @@
 
 #pragma once
 
-#include <sys/cdefs.h>
 #include <stddef.h>
 #include <stdint.h>
 
diff --git a/libcutils/include/cutils/str_parms.h b/libcutils/include/cutils/str_parms.h
index aa1435a..160792a 100644
--- a/libcutils/include/cutils/str_parms.h
+++ b/libcutils/include/cutils/str_parms.h
@@ -18,9 +18,10 @@
 #define __CUTILS_STR_PARMS_H
 
 #include <stdint.h>
-#include <sys/cdefs.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 struct str_parms;
 
@@ -55,6 +56,8 @@ char *str_parms_to_str(struct str_parms *str_parms);
 /* debug */
 void str_parms_dump(struct str_parms *str_parms);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif /* __CUTILS_STR_PARMS_H */
diff --git a/libcutils/include/cutils/trace.h b/libcutils/include/cutils/trace.h
index 7f57637..def5aeb 100644
--- a/libcutils/include/cutils/trace.h
+++ b/libcutils/include/cutils/trace.h
@@ -22,12 +22,13 @@
 #include <stdbool.h>
 #include <stdint.h>
 #include <stdio.h>
-#include <sys/cdefs.h>
 #include <sys/types.h>
 #include <unistd.h>
 #include <cutils/compiler.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /**
  * The ATRACE_TAG macro can be defined before including this header to trace
@@ -320,6 +321,8 @@ static inline void atrace_int64(uint64_t tag, const char* name, int64_t value)
     }
 }
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif // _LIBS_CUTILS_TRACE_H
diff --git a/libcutils/include/private/canned_fs_config.h b/libcutils/include/private/canned_fs_config.h
index ad4de4c..caf4b61 100644
--- a/libcutils/include/private/canned_fs_config.h
+++ b/libcutils/include/private/canned_fs_config.h
@@ -17,12 +17,15 @@
 #pragma once
 
 #include <inttypes.h>
-#include <sys/cdefs.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 int load_canned_fs_config(const char* fn);
 void canned_fs_config(const char* path, int dir, const char* target_out_path, unsigned* uid,
                       unsigned* gid, unsigned* mode, uint64_t* capabilities);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
diff --git a/libcutils/include/private/fs_config.h b/libcutils/include/private/fs_config.h
index 45f46e5..b4ceade 100644
--- a/libcutils/include/private/fs_config.h
+++ b/libcutils/include/private/fs_config.h
@@ -22,13 +22,14 @@
 #pragma once
 
 #include <stdint.h>
-#include <sys/cdefs.h>
 
 #include <linux/capability.h>
 
 /* Rules for directories and files has moved to system/code/libcutils/fs_config.c */
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /*
  * Used in:
@@ -43,4 +44,6 @@ __BEGIN_DECLS
 void fs_config(const char* path, int dir, const char* target_out_path, unsigned* uid, unsigned* gid,
                unsigned* mode, uint64_t* capabilities);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
diff --git a/libkeyutils/include/keyutils.h b/libkeyutils/include/keyutils.h
index c508f27..2c3b4b0 100644
--- a/libkeyutils/include/keyutils.h
+++ b/libkeyutils/include/keyutils.h
@@ -31,9 +31,10 @@
 
 #include <linux/keyctl.h>
 #include <stdint.h>
-#include <sys/cdefs.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 typedef int32_t key_serial_t;
 
@@ -55,6 +56,8 @@ long keyctl_restrict_keyring(key_serial_t keyring, const char* type, const char*
 
 long keyctl_get_security(key_serial_t key, char* buffer, size_t buflen);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif
diff --git a/libnetutils/include/netutils/ifc.h b/libnetutils/include/netutils/ifc.h
index ee896ac..3816f33 100644
--- a/libnetutils/include/netutils/ifc.h
+++ b/libnetutils/include/netutils/ifc.h
@@ -19,9 +19,10 @@
 
 #include <arpa/inet.h>
 #include <stdbool.h>
-#include <sys/cdefs.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 extern int ifc_init(void);
 extern void ifc_close(void);
@@ -64,6 +65,8 @@ extern int ifc_configure(const char *ifname, in_addr_t address,
 
 extern in_addr_t prefixLengthToIpv4Netmask(int prefix_length);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif /* _NETUTILS_IFC_H_ */
diff --git a/libpackagelistparser/include/packagelistparser/packagelistparser.h b/libpackagelistparser/include/packagelistparser/packagelistparser.h
index e89cb54..86b6604 100644
--- a/libpackagelistparser/include/packagelistparser/packagelistparser.h
+++ b/libpackagelistparser/include/packagelistparser/packagelistparser.h
@@ -19,7 +19,9 @@
 #include <stdbool.h>
 #include <sys/types.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 typedef struct gid_list {
   /** Number of gids. */
@@ -78,4 +80,6 @@ bool packagelist_parse_file(const char* path, bool (*callback)(pkg_info* info, v
 /** Frees the given `pkg_info`. */
 void packagelist_free(pkg_info* info);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
diff --git a/libprocessgroup/cgroup_map.h b/libprocessgroup/cgroup_map.h
index 5cdf8b2..322d4c4 100644
--- a/libprocessgroup/cgroup_map.h
+++ b/libprocessgroup/cgroup_map.h
@@ -16,7 +16,6 @@
 
 #pragma once
 
-#include <sys/cdefs.h>
 #include <sys/types.h>
 
 #include <map>
diff --git a/libprocessgroup/cgrouprc/include/android/cgrouprc.h b/libprocessgroup/cgrouprc/include/android/cgrouprc.h
index e704a36..e65aa4a 100644
--- a/libprocessgroup/cgrouprc/include/android/cgrouprc.h
+++ b/libprocessgroup/cgrouprc/include/android/cgrouprc.h
@@ -16,10 +16,11 @@
 
 #pragma once
 
-#include <sys/cdefs.h>
 #include <stdint.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 // For host builds, __INTRODUCED_IN is not defined.
 #ifndef __INTRODUCED_IN
@@ -92,4 +93,6 @@ __attribute__((warn_unused_result)) const char* ACgroupController_getName(const
 __attribute__((warn_unused_result)) const char* ACgroupController_getPath(const ACgroupController*)
         __INTRODUCED_IN(29);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
diff --git a/libprocessgroup/include/processgroup/processgroup.h b/libprocessgroup/include/processgroup/processgroup.h
index dbaeb93..0cc119c 100644
--- a/libprocessgroup/include/processgroup/processgroup.h
+++ b/libprocessgroup/include/processgroup/processgroup.h
@@ -16,7 +16,6 @@
 
 #pragma once
 
-#include <sys/cdefs.h>
 #include <sys/types.h>
 #include <initializer_list>
 #include <span>
@@ -24,7 +23,9 @@
 #include <string_view>
 #include <vector>

-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif

 static constexpr const char* CGROUPV2_HIERARCHY_NAME = "cgroup2";
 [[deprecated]] static constexpr const char* CGROUPV2_CONTROLLER_NAME = "cgroup2";
@@ -40,7 +41,9 @@ bool SetTaskProfiles(pid_t tid, const std::vector<std::string>& profiles,
 bool SetProcessProfiles(uid_t uid, pid_t pid, const std::vector<std::string>& profiles);
 bool SetUserProfiles(uid_t uid, const std::vector<std::string>& profiles);

-__END_DECLS
+#ifdef __cplusplus
+}
+#endif

 bool SetTaskProfiles(pid_t tid, std::initializer_list<std::string_view> profiles,
                      bool use_fd_cache = false);
@@ -49,7 +52,9 @@ bool SetTaskProfiles(int tid, std::span<const std::string_view> profiles,
 bool SetProcessProfiles(uid_t uid, pid_t pid, std::span<const std::string_view> profiles);
 #endif
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 #ifndef __ANDROID_VNDK__
 
@@ -102,4 +107,6 @@ bool isProfileValidForProcess(const std::string& profile_name, int uid, int pid)
 
 #endif // __ANDROID_VNDK__
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
diff --git a/libprocessgroup/task_profiles.h b/libprocessgroup/task_profiles.h
index 4663f64..bbba033 100644
--- a/libprocessgroup/task_profiles.h
+++ b/libprocessgroup/task_profiles.h
@@ -16,7 +16,6 @@
 
 #pragma once
 
-#include <sys/cdefs.h>
 #include <sys/types.h>
 #include <functional>
 #include <map>
diff --git a/libstats/push_compat/statsd_writer.h b/libstats/push_compat/statsd_writer.h
index f030b96..ffd38ea 100644
--- a/libstats/push_compat/statsd_writer.h
+++ b/libstats/push_compat/statsd_writer.h
@@ -21,7 +21,9 @@
 #include <stdatomic.h>
 #include <sys/socket.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /**
  * Internal lock should not be exposed. This is bad design.
@@ -44,6 +46,8 @@ struct android_log_transport_write {
     void (*noteDrop)(int error, int tag);
 };
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif  // ANDROID_STATS_LOG_STATS_WRITER_H
diff --git a/libsuspend/autosuspend_ops.h b/libsuspend/autosuspend_ops.h
index b0024c8..ea0eafd 100644
--- a/libsuspend/autosuspend_ops.h
+++ b/libsuspend/autosuspend_ops.h
@@ -24,8 +24,12 @@ struct autosuspend_ops {
     void (*set_wakeup_callback)(void (*func)(bool success));
 };
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 struct autosuspend_ops *autosuspend_wakeup_count_init(void);
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif
diff --git a/libsuspend/include/suspend/autosuspend.h b/libsuspend/include/suspend/autosuspend.h
index 21f4d61..dbbca16 100644
--- a/libsuspend/include/suspend/autosuspend.h
+++ b/libsuspend/include/suspend/autosuspend.h
@@ -17,10 +17,11 @@
 #ifndef _LIBSUSPEND_AUTOSUSPEND_H_
 #define _LIBSUSPEND_AUTOSUSPEND_H_
 
-#include <sys/cdefs.h>
 #include <stdbool.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /*
  * autosuspend_enable
@@ -64,6 +65,8 @@ int autosuspend_force_suspend(int timeout_ms);
  */
 void autosuspend_set_wakeup_callback(void (*func)(bool success));
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif
diff --git a/libsync/include/android/sync.h b/libsync/include/android/sync.h
index 32bb878..59a8f9f 100644
--- a/libsync/include/android/sync.h
+++ b/libsync/include/android/sync.h
@@ -39,11 +39,15 @@
 
 #include "../ndk/sync.h"
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /* timeout in msecs */
 int sync_wait(int fd, int timeout);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif /* __SYS_CORE_SYNC_H */
diff --git a/libsync/include/ndk/sync.h b/libsync/include/ndk/sync.h
index 38ccb68..04c8e07 100644
--- a/libsync/include/ndk/sync.h
+++ b/libsync/include/ndk/sync.h
@@ -27,11 +27,12 @@
 #define ANDROID_SYNC_H
 
 #include <stdint.h>
-#include <sys/cdefs.h>
 
 #include <linux/sync_file.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /* Fences indicate the status of an asynchronous task. They are initially
  * in unsignaled state (0), and make a one-time transition to either signaled
@@ -99,7 +100,9 @@ static inline struct sync_fence_info* sync_get_fence_info(const struct sync_file
  */
 void sync_file_info_free(struct sync_file_info* info) __INTRODUCED_IN(26);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif /* ANDROID_SYNC_H */
 
diff --git a/libsync/sw_sync.h b/libsync/sw_sync.h
index fda1c4c..395c380 100644
--- a/libsync/sw_sync.h
+++ b/libsync/sw_sync.h
@@ -19,7 +19,9 @@
 #ifndef __SYS_CORE_SW_SYNC_H
 #define __SYS_CORE_SW_SYNC_H
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /*
  * sw_sync is mainly intended for testing and should not be compiled into
@@ -30,6 +32,8 @@ int sw_sync_timeline_create(void);
 int sw_sync_timeline_inc(int fd, unsigned count);
 int sw_sync_fence_create(int fd, const char *name, unsigned value);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif /* __SYS_CORE_SW_SYNC_H */
diff --git a/libsystem/include/system/camera.h b/libsystem/include/system/camera.h
index 2ca90c3..c42f559 100644
--- a/libsystem/include/system/camera.h
+++ b/libsystem/include/system/camera.h
@@ -18,13 +18,14 @@
 #define SYSTEM_CORE_INCLUDE_ANDROID_CAMERA_H
 
 #include <stdint.h>
-#include <sys/cdefs.h>
 #include <sys/types.h>
 #include <cutils/native_handle.h>
 #include <hardware/hardware.h>
 #include <hardware/gralloc.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /**
  * A set of bit masks for specifying how the received preview frames are
@@ -302,6 +303,8 @@ typedef struct camera_frame_metadata {
     camera_face_t *faces;
 } camera_frame_metadata_t;
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif /* SYSTEM_CORE_INCLUDE_ANDROID_CAMERA_H */
diff --git a/libsystem/include/system/radio.h b/libsystem/include/system/radio.h
index acf3ea7..dfd254f 100644
--- a/libsystem/include/system/radio.h
+++ b/libsystem/include/system/radio.h
@@ -20,7 +20,6 @@
 #include <stdbool.h>
 #include <stdint.h>
 #include <stdio.h>
-#include <sys/cdefs.h>
 #include <sys/types.h>
 
 
diff --git a/libutils/Singleton_test.h b/libutils/Singleton_test.h
index c77d9ff..00bd562 100644
--- a/libutils/Singleton_test.h
+++ b/libutils/Singleton_test.h
@@ -17,7 +17,6 @@
 #ifndef ANDROID_UTILS_SINGLETON_TEST_H
 #define ANDROID_UTILS_SINGLETON_TEST_H
 
-#include <sys/cdefs.h>
 
 #include "Singleton_test.h"
 
@@ -27,13 +26,17 @@ struct SingletonTestData : Singleton<SingletonTestData> {
     unsigned int contents;
 };
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 unsigned int singletonGetInstanceContents();
 void singletonSetInstanceContents(unsigned int);
 bool singletonHasInstance();
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 }
 
diff --git a/llkd/include/llkd.h b/llkd/include/llkd.h
index 0822a3e..a4e3037 100644
--- a/llkd/include/llkd.h
+++ b/llkd/include/llkd.h
@@ -22,9 +22,10 @@
 #endif
 
 #include <stdbool.h>
-#include <sys/cdefs.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 bool llkInit(const char* threadname); /* threadname NULL, not spawned */
 unsigned llkCheckMilliseconds(void);
@@ -63,17 +64,25 @@ unsigned llkCheckMilliseconds(void);
 #define LLK_IGNORELIST_STACK_DEFAULT    "init,lmkd.llkd,llkd,keystore,keystore2,ueventd,apexd"
 /* clang-format on */
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #ifdef __cplusplus
-extern "C++" { /* In case this included wrapped with __BEGIN_DECLS */
+extern "C++" { /* In case this included wrapped with #ifdef __cplusplus
+extern "C" {
+#endif */
 
 #include <chrono>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 /* C++ code allowed to not specify threadname argument for this C linkage */
 bool llkInit(const char* threadname = nullptr);
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 std::chrono::milliseconds llkCheck(bool checkRunning = false);
 
 /* clang-format off */
diff --git a/llkd/libllkd.cpp b/llkd/libllkd.cpp
index 42602e9..ed348bb 100644
--- a/llkd/libllkd.cpp
+++ b/llkd/libllkd.cpp
@@ -25,7 +25,6 @@
 #include <signal.h>
 #include <stdint.h>
 #include <string.h>
-#include <sys/cdefs.h>  // ___STRING, __predict_true() and _predict_false()
 #include <sys/mman.h>   // mlockall()
 #include <sys/prctl.h>
 #include <sys/stat.h>     // lstat()
diff --git a/trusty/gatekeeper/trusty_gatekeeper_ipc.h b/trusty/gatekeeper/trusty_gatekeeper_ipc.h
index f8de7f8..fa8fd40 100644
--- a/trusty/gatekeeper/trusty_gatekeeper_ipc.h
+++ b/trusty/gatekeeper/trusty_gatekeeper_ipc.h
@@ -14,11 +14,15 @@
  * limitations under the License.
  */
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 int trusty_gatekeeper_connect();
 int trusty_gatekeeper_call(uint32_t cmd, void *in, uint32_t in_size, uint8_t *out,
                            uint32_t *out_size);
 void trusty_gatekeeper_disconnect();
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
diff --git a/trusty/keymaster/include/trusty_keymaster/ipc/trusty_keymaster_ipc.h b/trusty/keymaster/include/trusty_keymaster/ipc/trusty_keymaster_ipc.h
index 16207e6..9a12458 100644
--- a/trusty/keymaster/include/trusty_keymaster/ipc/trusty_keymaster_ipc.h
+++ b/trusty/keymaster/include/trusty_keymaster/ipc/trusty_keymaster_ipc.h
@@ -20,7 +20,9 @@
 #include <keymaster/android_keymaster_messages.h>
 #include <trusty_keymaster/ipc/keymaster_ipc.h>

-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif

 const uint32_t TRUSTY_KEYMASTER_RECV_BUF_SIZE = 2 * 4096;
 const uint32_t TRUSTY_KEYMASTER_SEND_BUF_SIZE =
@@ -35,6 +37,8 @@ keymaster_error_t translate_error(int err);
 keymaster_error_t trusty_keymaster_send(uint32_t command, const keymaster::Serializable& req,
                                         keymaster::KeymasterResponse* rsp);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif  // TRUSTY_KEYMASTER_TRUSTY_KEYMASTER_IPC_H_
diff --git a/trusty/storage/lib/include/trusty/lib/storage.h b/trusty/storage/lib/include/trusty/lib/storage.h
index b8ddf67..6cac875 100644
--- a/trusty/storage/lib/include/trusty/lib/storage.h
+++ b/trusty/storage/lib/include/trusty/lib/storage.h
@@ -21,7 +21,9 @@
 
 #define STORAGE_MAX_NAME_LENGTH_BYTES 159
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 typedef uint32_t storage_session_t;
 typedef uint64_t file_handle_t;
@@ -151,4 +153,6 @@ int storage_get_file_size(file_handle_t handle, storage_off_t *size);
 int storage_end_transaction(storage_session_t session, bool complete);
 
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
